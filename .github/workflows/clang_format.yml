name: Clang_Format

on:
  push:
    branches:
      - experimental
  pull_request:
    branches:
      - experimental

jobs:
  clang-format:
    name: Clang_Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Clang-Format
        run: sudo apt-get install -y clang-format

      - name: Run Clang-Format
        run: clang-format -i src/*.cpp include/*.h tests/*/*.cpp tests/*/*.h tests/*.cpp --style file:.clang-format

      - name: Check for modifications
        id: check_modifications
        run: |
          echo "modified=$(git status --porcelain)" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.modified == 'M'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "CLANG FORMAT"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  formatting-check:
    name: Formatting Check
    needs: clang-format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - 'src'
          - 'include'
          - 'tests'
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: '13'
        check-path: ${{ matrix.path }}
        fallback-style: 'Google'